observed_asv_plot <- ggplot(metadata, aes(x=HostSampleType, y=observed_features, fill=HostSampleType)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
faiths_pd_plot <- ggplot(metadata, aes(x=HostSampleType, y=faith_pd, fill=HostSampleType)) +
geom_boxplot(outlier.color="gray") +
theme_classic() +
scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Faith's Phylogenetic Diveristy", tag="B") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
#Plot together
observed_asv_plot + faiths_pd_plot
# Will use Observed ASV and Faith's PD for manuscript; ANOVA assumptions OK
anova_observed_asv <- aov(metadata$observed_features ~ metadata$HostSampleType)
summary(anova_observed_asv)
tukey_observed_asv <- TukeyHSD(anova_observed_asv, ordered="TRUE")
# Extract letters associated with significance with the "multcompView" package
observed_letters <- multcompLetters4(anova_observed_asv, tukey_observed_asv)
library(multcompView)
observed_letters <- multcompLetters4(anova_observed_asv, tukey_observed_asv)
as.data.frame.list(observed_letters$`metadata$HostSampleType`)
tukey_faiths_pd
tukey_faiths_pd <- TukeyHSD(anova_faiths_pd, ordered="TRUE")
anova_observed_asv <- aov(metadata$observed_features ~ metadata$HostSampleType)
summary(anova_observed_asv)
tukey_observed_asv <- TukeyHSD(anova_observed_asv, ordered="TRUE")
tukey_observed_asv
anova_faiths_pd <- aov(metadata$faith_pd ~ metadata$HostSampleType)
summary(anova_faiths_pd)
tukey_faiths_pd <- TukeyHSD(anova_faiths_pd, ordered="TRUE")
tukey_faiths_pd
#load libraries
library(phyloseq)
library(DESeq2)
library(tidyverse)
library(RColorBrewer)
theme_set(theme_bw())
setwd("/Volumes/GoogleDrive/Shared drives/Research/active_projects/mat_bacteria/Leucopaxillus_mat/analyses/R analyses")
setwd("/Volumes/GoogleDrive/Shared drives/Research/active_projects/mat_bacteria/Leucopaxillus_mat/analyses/R analyses/16S")
#Color Brewer Pallette
#RColorBrewer::display.brewer.all()
#Manual color scales
PhylaColors <- c("Acidobacteriota" = "#1c9e77", "Actinobacteriota" = "#756fb4", "Bacteroidota" = "#f45c85",
"Chloroflexi" = "#436fb6", "Cyanobacteria" = "seagreen", "Desulfobacterota" = "gold1",
"Firmicutes" = "#d671aa", "Gemmatimonadota" = "#ed4131", "Myxococcota" = "#c2e871",
"Patescibacteria" = "deepskyblue", "Planctomycetota" = "#7a81ff","Proteobacteria" = "orange", "Verrucomicrobiota" = "#66a621")
#Import a phyloseq object (biom should have taxonomy attached), start with UNRAREFIED otu table
leucopax_bact <- import_biom("table-final-with-taxonomy.biom")#, treefilename="tree-leucopax-bact.nwk", refseqfilename="seqs-leucopax-bact.fasta")
#Rename columns
colnames(tax_table(leucopax_bact)) <- c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")
#Read in metadata; standard QIIME2 metadata table can be used here
metadata <- read.csv("metadata-leucopax-bact.csv")
#Create another row for "SampleID"; create a dataframe for the metadata
row.names(metadata) <- metadata$X.SampleID
metadata$SampleID <- metadata$X.SampleID
sample_data(leucopax_bact) <- metadata
sample_names(leucopax_bact) <- metadata
View(metadata)
sample_data(leucopax_bact) <- metadata
library(phyloseq)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
library(phyloseq)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq", force=TRUE)
library(vegan)
library(phyloseq)
library(tidyverse)
setwd("/Volumes/GoogleDrive/Shared drives/Research/active_projects/mat_bacteria/Leucopaxillus_mat/analyses/R analyses/16S")
#Read in rarefied OTU table
otu_table <- read.table(file="rarefied-table-with-taxonomy.tsv", header=TRUE, sep='\t', check.names=FALSE, row.names=1) %>%
select(-taxonomy) %>%
t() %>%
as_tibble()
setwd("/Volumes/GoogleDrive/Shared drives/Research/active_projects/mat_bacteria/Leucopaxillus_mat/analyses/R analyses/16S")
#Read in rarefied OTU table
otu_table <- read.table(file="rarefied-table-with-taxonomy.tsv", header=TRUE, sep='\t', check.names=FALSE, row.names=1) %>%
select(-taxonomy) %>%
t() %>%
as_tibble()
#Read in rarefied OTU table
otu_table <- read.table(file="rarefied-table-with-taxonomy.tsv", header=TRUE, sep='\t', check.names=FALSE, row.names=1) %>%
select(-taxonomy) %>%
t() %>%
as_tibble()
Observed_otus <- read.table(file="observed-otus.tsv", header=TRUE)
Shannon_div <- read.table(file="shannon-diversity.tsv", header=TRUE)
Faith_PD <- read.table(file="faith-PD.tsv", header=TRUE)
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-leucopax-bact.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
as_tibble()
#Format data tables for phyloseq
otu <- otu_table(otu_table, taxa_are_rows=FALSE)
# taxa <- tax_table(taxa_table)
metadata <- sample_data(metadata_table)
tree<-read_tree("Leucopaxillus-bact-tree.nwk")
#Merge data tables into a phyloseq object
merged_tables <- phyloseq(otu, metadata, tree)#, taxa)
##===================================================================================================
##                                  Testing ANOVA assumptions; perform ANOVA
##===================================================================================================
# Using the Shapiro Test -- if p-value not significant = data is normal = OK for ANOVA
shapiro.test(metadata$observed_features)#NS
shapiro.test(metadata$faith_pd)#NS
# Test for homogeneity of variances -- if p-value not significant = data is homogeneous = OK for ANOVA
bartlett.test(metadata$observed_features~metadata$HostSampleType)#NS
bartlett.test(metadata$faith_pd~metadata$HostSampleType)#NS
#Measure dispersion of Bray-Curtis distances
betadisper(braydist, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
##===================================================================================================
##                                Making distance matrices
##===================================================================================================
#Extract the metadata table from phyloseq object
metadata_table <- data.frame(sample_data(merged_tables))
#Bray-Curtis distance matrix
braydist <- phyloseq::distance(merged_tables, method="bray", weighted=TRUE)
#Unifrac distance matrix
unifracdist <- phyloseq::distance(merged_tables, method="unifrac", weighted=FALSE)
#Weighted Unifrac distance matrix
unifracdist_w <- phyloseq::distance(merged_tables, method="unifrac", weighted=TRUE)
#Measure dispersion of Bray-Curtis distances
betadisper(braydist, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
#Measure dispersion of unweighted Unifrac distances
betadisper(unifracdist, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
#Measure dispersion of weighted Unifrac distances
betadisper(unifracdist_w, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
#Measure dispersion of Bray-Curtis distances
betadisper(braydist, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
#Measure dispersion of unweighted Unifrac distances
betadisper(unifracdist, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
#Measure dispersion of weighted Unifrac distances
betadisper(unifracdist_w, metadata_table$HostSampleType) %>%
permutest(pair=FALSE)
setwd("/Volumes/GoogleDrive/Shared drives/Research/active_projects/mat_bacteria/Leucopaxillus_mat/analyses/R analyses/16S")
library(tidyverse)
library(vegan)
library(phyloseq)
library(multcompView)
library(patchwork)
#Read in rarefied OTU table
otu_table <- read.table(file="rarefied-table-with-taxonomy.tsv", header=TRUE, sep='\t', check.names=FALSE, row.names=1) %>%
select(-taxonomy) %>%
t() %>%
as_tibble()
Observed_otus <- read.table(file="observed-otus.tsv", header=TRUE)
Shannon_div <- read.table(file="shannon-diversity.tsv", header=TRUE)
Faith_PD <- read.table(file="faith-PD.tsv", header=TRUE)
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-leucopax-bact.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
as_tibble()
#Format data tables for phyloseq
otu <- otu_table(otu_table, taxa_are_rows=FALSE)
# taxa <- tax_table(taxa_table)
metadata <- sample_data(metadata_table)
tree<-read_tree("Leucopaxillus-bact-tree.nwk")
#Merge data tables into a phyloseq object
merged_tables <- phyloseq(otu, metadata, tree)#, taxa)
observed_asv_plot <- ggplot(metadata, aes(x=HostSampleType, y=observed_features, fill=HostSampleType)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
faiths_pd_plot <- ggplot(metadata, aes(x=HostSampleType, y=faith_pd, fill=HostSampleType)) +
geom_boxplot(outlier.color="gray") +
theme_classic() +
scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Faith's Phylogenetic Diveristy", tag="B") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
#Plot together
observed_asv_plot + faiths_pd_plot
ggplot(metadata, aes(x=HostSampleType, y=observed_features, fill=HostSampleType)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
ggplot(metadata, aes(x=HostSampleType, y=observed_features, fill=HostSampleType)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
#  scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
#                    labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
ggplot(metadata, aes(x=HostSampleType, y=observed_features, fill=FALSE)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
#  scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
#                    labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
ggplot(metadata, aes(x=HostSampleType, y=observed_features)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
#  scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
#                    labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
observed_asv_plot <- ggplot(metadata, aes(x=HostSampleType, y=observed_features)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
#  scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
#                    labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Observed ASVs", tag="A") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
faiths_pd_plot <- ggplot(metadata, aes(x=HostSampleType, y=faith_pd)) +
geom_boxplot(outlier.color="gray", show.legend = FALSE) +
theme_classic() +
#  scale_fill_manual(values=c("#B3DE68", "#8DD3C7", "#FDB462", "#FB8072"), name="Sample type",
#                    labels=c("L. albissimus mat", "L. albissimus non-mat", "L. gentianeus mat", "L. gentianeus non-mat")) +
#scale_fill_brewer(palette="Dark2") +
scale_x_discrete(limit=c("L.gentianeus_mat", "L.gentianeus_soil", "L.albissimus_mat", "L.albissimus_soil"),
labels = c("L. gentianeus \n mat", "L. gentianeus \n non-mat", "L. albissimus \n mat", "L. albissimus \n non-mat")) +
labs(x="", y = "Faith's Phylogenetic Diveristy", tag="B") +
theme(axis.text.x = element_text(face = "italic")) +
theme(plot.tag = element_text(size=18))
#Plot together
observed_asv_plot + faiths_pd_plot
ggsave("Figure1-alphadiv.pdf", device="pdf", width=10, height=5)
ggsave("Figure1-alphadiv.pdf", device="pdf", width=9, height=5)
source("/Volumes/GoogleDrive/Shared drives/Research/active_projects/mat_bacteria/Chlorophyllum_mat/analyses/R analyses/16S/Figures 1 & 2 - Richness and Ordination.R")
setwd("/Volumes/GoogleDrive/Shared drives/Crop soil microbiome/Manuscripts/Manuscript 1 - crop species/Env Microbiology submission/EMI 2nd submission/R commands/Nhu's_analyses")
library(vegan)
library(phyloseq)
library(multcompView)
library(patchwork)
library(pairwiseAdonis)
library(RColorBrewer)
#Read in diversity metrics. Make sure that each of the TSV files have a "SampleID" header.
Observed_otus <- read.table(file="observed-otus.tsv", header=TRUE)
source("/Volumes/GoogleDrive/Shared drives/Crop soil microbiome/Manuscripts/Manuscript 1 - crop species/Env Microbiology submission/EMI 2nd submission/R commands/Nhu's_analyses/16S.R")
library(tidyverse)
setwd("/Volumes/GoogleDrive/Shared drives/Crop soil microbiome/Manuscripts/Manuscript 1 - crop species/Env Microbiology submission/EMI 2nd submission/R commands/Nhu's_analyses/16S")
#Read in diversity metrics. Make sure that each of the TSV files have a "SampleID" header.
Observed_otus <- read.table(file="observed-otus.tsv", header=TRUE)
Shannon_div <- read.table(file="shannon-diversity.tsv", header=TRUE)
Faith_PD <- read.table(file="faith-PD.tsv", header=TRUE)
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-16S-LKM.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
as_tibble()
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-16S-LKM.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
as_tibble()
View(metadata_table)
ggplot(metadata_table, aes(x=Cycle, y=observed_features))
ggplot(metadata_table, aes(x=Cycle, y=observed_features)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = TRUE) +
theme_classic()
ggplot(metadata_table, aes(x=Cycle, y=observed_features, group=Crop)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = TRUE) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, group=Crop))
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, group=Crop)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = TRUE) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, group=NA)) +
#stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(outlier.color="gray", show.legend = TRUE) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop, shape=Crop)) +
geom_point() +
geom_smooth(method=lm)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop, shape=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic()
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-16S-LKM.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
filter(column15 > 500) %>%
as_tibble()
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-16S-LKM.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
filter(observed_features > 500) %>%
as_tibble()
#Read in metadata file and merge Obseverd OTUs and Shannon Diversity with the metadata
metadata_table <- read.table(file="metadata-16S-LKM.tsv", header=TRUE) %>%
left_join(Observed_otus, by="SampleID", row.names="SampleID") %>%
left_join(Shannon_div, by="SampleID") %>%
left_join(Faith_PD, by="SampleID") %>%
drop_na() %>%
filter(observed_features < 500) %>%
as_tibble()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
#  geom_point() +
geom_smooth(method=lm) +
theme_classic() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme_classic() +
ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic() +
ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic()
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter() +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter(width=0.3) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter(width=0.2) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter(width=0.1) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
#  geom_jitter(width=0.1) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter(width=0.1) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter(width=0.1) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
geom_jitter(width=0.15) +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.8) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.7) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
library(tidyverse)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.7) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
library(ggplot2)
ggplot(metadata_table, aes(x=CropCycle, y=observed_features, color=Crop)) +
geom_point(alpha=0.7) +
geom_smooth(method=lm, aes(fill=Crop)) +
theme_classic() +
scale_color_brewer(palette="Dark2")
